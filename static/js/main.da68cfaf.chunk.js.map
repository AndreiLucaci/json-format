{"version":3,"sources":["types/editor.types.ts","components/left-panel/LeftPanel.tsx","constants/options.ts","services/notificationService.ts","components/right-panel/RightPanel.tsx","engine/JsonFormatter.ts","pages/editor-page/EditorPage.tsx","sections/footer/Footer.tsx","sections/header/Header.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["MONOKAI","base","inherit","rules","background","token","foreground","fontStyle","colors","Content","Layout","Title","Typography","LeftPannel","props","useEffect","monacoEditor","defineTheme","style","width","height","className","padding","span","level","language","options","minimap","enabled","wordWrap","theme","onChange","newValue","newVal","undefined","DEFAULT_OPTIONS","spaces","notificationService","notification","open","placement","error","RightPanel","useState","editor","setEditor","spaceSize","setSpaceSize","onStepperChange","value","onIndentSizeChange","backgroundColor","marginTop","min","max","step","margin","type","icon","CopyOutlined","size","onClick","range","getModel","getFullModelRange","focus","setSelection","document","execCommand","message","description","err","readOnly","renderFinalNewline","renderWhitespace","inputText","editorDidMount","editorMount","JsonFormatterEngine","jsonInput","JSON","parse","jsonOptions","stringify","EditorPage","engine","setInputText","indentSize","setIndentSize","onInputChange","val","formatterValue","formatOptions","format","FooterComponent","Footer","Text","Link","fontSize","textAlign","fontFamily","color","title","href","HeaderComponent","Header","App","activePage","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"wZAEaA,EAAoD,CAC/DC,KAAM,UACNC,SAAS,EACTC,MAAO,CACL,CACEC,WAAY,SACZC,MAAO,IAET,CACEC,WAAY,SACZD,MAAO,WAET,CACEC,WAAY,SACZD,MAAO,UAET,CACEC,WAAY,SACZD,MAAO,gBAET,CACEC,WAAY,SACZD,MAAO,oBAET,CACEC,WAAY,SACZD,MAAO,qBAET,CACEC,WAAY,SACZD,MAAO,sBAET,CACEC,WAAY,SACZD,MAAO,kBAET,CACEC,WAAY,SACZD,MAAO,WAET,CACEC,WAAY,SACZD,MAAO,WAET,CACEC,WAAY,SACZC,UAAW,SACXF,MAAO,gBAET,CACEC,WAAY,SACZC,UAAW,YACXF,MAAO,qBAET,CACEC,WAAY,SACZC,UAAW,mBACXF,MAAO,gCAET,CACEC,WAAY,SACZD,MAAO,wBAET,CACEC,WAAY,SACZC,UAAW,SACXF,MAAO,sBAET,CACEC,WAAY,SACZD,MAAO,mBAET,CACEC,WAAY,SACZD,MAAO,+BAET,CACEC,WAAY,SACZD,MAAO,oBAET,CACEC,WAAY,SACZD,MAAO,oBAET,CACEC,WAAY,SACZC,UAAW,SACXF,MAAO,gBAET,CACEC,WAAY,SACZC,UAAW,SACXF,MAAO,iBAET,CACEC,WAAY,SACZF,WAAY,SACZC,MAAO,WAET,CACEC,WAAY,SACZF,WAAY,SACZC,MAAO,sBAET,CACEC,WAAY,SACZD,MAAO,4DAET,CACEC,WAAY,SACZD,MAAO,aAET,CACEC,WAAY,SACZD,MAAO,oBAET,CACEC,WAAY,SACZD,MAAO,kBAET,CACEC,WAAY,SACZD,MAAO,mBAET,CACEC,WAAY,SACZD,MAAO,kBAET,CACEC,WAAY,WACZD,MAAO,sDAET,CACEC,WAAY,SACZD,MAAO,uCAGXG,OAAQ,CACN,oBAAqB,UACrB,oBAAqB,UACrB,6BAA8B,UAC9B,iCAAkC,UAClC,0BAA2B,UAC3B,8BAA+B,UAC/B,qCAAsC,YACtC,kCAAmC,YCzI/BC,G,cAAYC,IAAZD,SACAE,EAAUC,IAAVD,MAEKE,EAAiC,SAACC,GAC7CC,qBAAU,WACRC,SAAoBC,YAAY,UAAWjB,KAC1C,IAQH,OACE,eAACS,EAAD,CAASS,MAAO,CAAEC,MAAO,OAAQC,OAAQ,QAAzC,UACE,cAACX,EAAD,CAASY,UAAU,YAAnB,SACE,cAAC,IAAD,CAAKH,MAAO,CAAEI,QAAS,UAAvB,SACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,cAACZ,EAAD,CAAOU,UAAU,aAAaG,MAAO,EAArC,gDAON,cAAC,IAAD,CACEL,MAAM,OACNC,OAAO,OACPK,SAAS,OACTC,QAAS,CACPC,QAAS,CACPC,SAAS,GAEXH,SAAU,OACVI,SAAU,MAEZC,MAAM,UACNC,SAAU,SAACC,GA9BK,IAACC,OACNC,KADMD,EA8BqBD,IA5BxClB,EAAMiB,SAASE,U,oCClBRE,EAAwC,CACnDC,OAAQ,G,gCCqBGC,EAA4C,IAhBzD,6FACOX,GACHY,IAAaC,KAAb,aACEC,UAAW,eACRd,MAJT,4BAQQA,GACJY,IAAaG,MAAb,aACED,UAAW,eACRd,QAXT,MCYQjB,G,OAAYC,IAAZD,SACAE,EAAUC,IAAVD,MAEK+B,EAAkC,SAAC5B,GAC9CC,qBAAU,WACRC,SAAoBC,YAAY,UAAWjB,KAC1C,IAHsE,MAQrE2C,qBARqE,mBAMvEC,EANuE,KAOvEC,EAPuE,OAUvCF,mBAASR,EAAgBC,QAVc,mBAUlEU,EAVkE,KAUvDC,EAVuD,KAyCnEC,EAAkB,SAACC,GACF,kBAAVA,IACTF,EAAaE,GAETnC,EAAMoC,oBACRpC,EAAMoC,mBAAmB,CAAEd,OAAQa,MAazC,OACE,eAAC,EAAD,CACE/B,MAAO,CACLC,MAAO,OACPC,OAAQ,OACR+B,gBAAiB,WAJrB,UAOE,cAAC,EAAD,UACE,eAAC,IAAD,CAAKjC,MAAO,CAAEI,QAAS,UAAvB,UACE,cAAC,IAAD,CAAKC,KAAM,GAAX,SACE,eAAC,IAAD,CAAKF,UAAU,iBAAf,UACE,cAAC,IAAD,CAAKE,KAAM,EAAX,SACE,cAAC,EAAD,CAAOC,MAAO,EAAGH,UAAU,kBAA3B,8BAIF,cAAC,IAAD,CAAKE,KAAM,EAAGL,MAAO,CAAEkC,UAAW,QAAlC,SACE,cAAC,IAAD,CACEC,IAAK,EACLC,IAAK,EACLC,KAAM,EACNlC,UAAU,cACVU,SAAU,SAACkB,GACTD,EAAgBC,IAElBA,MACuB,kBAAdH,EACHA,EACAX,EAAgBC,WAI1B,cAAC,IAAD,CAAKb,KAAM,EAAGL,MAAO,CAAEkC,UAAW,QAAlC,SACE,cAAC,IAAD,CACEC,IAAK,EACLC,IAAK,EACLjC,UAAU,mCACVH,MAAO,CAAEsC,OAAQ,SAAUrC,MAAO,QAClC8B,MAAOH,EACPS,KAAM,EACNxB,SAAU,SAACkB,GACTD,EAAgBC,aAM1B,cAAC,IAAD,CAAK1B,KAAM,EAAX,SACE,cAAC,IAAD,CACEF,UAAU,cACVoC,KAAK,SACLC,KAAM,cAACC,EAAA,EAAD,IACNC,KAAM,QACNC,QA7FQ,WAClB,IACE,GAAIjB,EAAQ,CACV,IAAMkB,EAAQlB,EAAOmB,WAAYC,oBACjCpB,EAAOqB,QACPrB,EAAOsB,aAAaJ,GACpBK,SAASC,YAAY,QAbzB/B,EAAoBE,KAAK,CACvB8B,QAAS,0BACTC,YAAa,uCACbZ,KAAM,cAACC,EAAA,EAAD,WAcJtB,EAAoBI,MAAM,CACxB4B,QAAS,oBAGb,MAAOE,GACPlC,EAAoBI,MAAM,CACxB4B,QAASE,EAAIF,YAwET,wCAaN,cAAC,IAAD,CACElD,MAAM,OACNC,OAAO,OACPU,MAAM,UACNJ,QAAS,CACPC,QAAS,CACPC,SAAS,GAEXH,SAAU,OACV+C,UAAU,EACVC,oBAAoB,EACpBC,iBAAkB,MAClB7C,SAAU,KACVC,MAAO,WAETmB,MAAOnC,EAAM6D,UACbC,eAAgB,SAAChC,GAAD,OAtFF,SAACA,GACnB,IACEC,EAAUD,GACV,MAAO2B,GACPlC,EAAoBI,MAAM8B,EAAIF,UAkFAQ,CAAYjC,UCzJnCkC,EAAb,+FACS7B,EAAevB,GACpB,IACE,IAAMqD,EAAYC,KAAKC,MAAMhC,GAEvBiC,EAAW,OAAGxD,QAAH,IAAGA,IAAWS,EAE/B,OAAO6C,KAAKG,UAAUJ,EAAW,KAAMG,EAAY9C,QACnD,MAAOmC,GACP,MAAMA,OATZ,KCEaa,EAAiB,WAC5B,IAAMC,EAA+B,IAAIP,EADP,EAEAnC,mBAAS,IAFT,mBAE3BgC,EAF2B,KAEhBW,EAFgB,OAGE3C,mBAASR,GAHX,mBAG3BoD,EAH2B,KAGfC,EAHe,KAK5BC,EAAgB,SAACC,EAAahE,GAClC,IAAIiE,EAAiB,GACrB,IACE,IAAMC,EAAa,OAAGlE,QAAH,IAAGA,IAAW6D,EACjCI,EAAiBN,EAAOQ,OAAOH,EAAKE,GACpC,MAAOrB,GACPoB,EAAiBpB,EAAIF,QAGvBiB,EAAaK,IAYf,OACE,eAAC,IAAD,CAAKzE,MAAO,CAAEE,OAAQ,QAAtB,UACE,cAAC,IAAD,CAAKG,KAAM,GAAX,SACE,cAAC,EAAD,CAAYQ,SAAU0D,MAExB,cAAC,IAAD,CAAKlE,KAAM,GAAX,SACE,cAAC,EAAD,CACE2B,mBAhBmB,SAACxB,GAC1B,IACE8D,EAAc9D,GACd+D,EAAcd,EAAWjD,GACzB,MAAO6C,GACPlC,EAAoBI,MAAM8B,EAAIF,WAY1BM,UAAWA,UCtCLmB,G,OAAoBpF,IAA5BqF,QACAC,EAAepF,IAAfoF,KAAMC,EAASrF,IAATqF,KAEDF,EAAa,WACxB,OACE,cAACD,EAAD,CAAiBzE,UAAU,SAA3B,SACE,eAAC2E,EAAD,CACE9E,MAAO,CACLgF,SAAU,OACVC,UAAW,SACXC,WACE,4EALN,UAQE,eAACJ,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,UAAoC,KAApC,OACA,cAACL,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,2BAAwD,IACxD,cAACL,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,sBAAgD,IAChD,cAACL,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,eAA4C,IAC5C,cAACJ,EAAD,CACE/E,MAAO,CAAEmF,MAAO,WAChBC,MAAM,SACNC,KAAK,8CAHP,yDAMQ,IACR,cAACP,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,eAA4C,IAC5C,cAACL,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,kBAA+C,IAC/C,cAACL,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,oBAAiD,IACjD,cAACL,EAAD,CAAM9E,MAAO,CAAEmF,MAAO,WAAtB,SAAoC,aC3B5BG,G,OAAoB9F,IAA5B+F,QACAT,EAAgBpF,IAAhBoF,KAAMrF,EAAUC,IAAVD,MAED8F,EAAa,WACxB,OACE,cAACD,EAAD,CAAiBnF,UAAU,SAA3B,SACE,eAAC,EAAD,CACEH,MAAO,CACLkC,UAAW,OACX+C,UAAW,UAEb9E,UAAU,KALZ,UAOE,cAAC,EAAD,CAAMA,UAAU,cAAhB,mBACA,cAAC,EAAD,CAAMA,UAAU,eAAhB,0BACA,cAAC,EAAD,CAAMA,UAAU,eAAhB,gCACA,cAAC,EAAD,CAAMA,UAAU,aAAhB,kBACA,cAAC,EAAD,CAAMA,UAAU,cAAhB,wBCfAZ,EAAYC,IAAZD,QAcOiG,EAZC,WAAO,IAAD,EACC/D,mBAAS,cAAC,EAAD,KAAvBgE,EADa,oBAGpB,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,CAAStF,UAAU,OAAnB,SAA2BsF,IAC3B,cAAC,EAAD,QCHSC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,qBAAKlG,UAAU,WAAf,SACE,cAAC,EAAD,QAGJ8C,SAASqD,eAAe,SAM1BZ,M","file":"static/js/main.da68cfaf.chunk.js","sourcesContent":["import * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\n\nexport const MONOKAI: monacoEditor.editor.IStandaloneThemeData = {\n  base: \"vs-dark\",\n  inherit: true,\n  rules: [\n    {\n      background: \"272821\",\n      token: \"\",\n    },\n    {\n      foreground: \"75715e\",\n      token: \"comment\",\n    },\n    {\n      foreground: \"75715e\",\n      token: \"string\",\n    },\n    {\n      foreground: \"E7DB61\",\n      token: \"string.quote\",\n    },\n    {\n      foreground: \"ae81ff\",\n      token: \"constant.numeric\",\n    },\n    {\n      foreground: \"ae81ff\",\n      token: \"constant.language\",\n    },\n    {\n      foreground: \"ae81ff\",\n      token: \"constant.character\",\n    },\n    {\n      foreground: \"ae81ff\",\n      token: \"constant.other\",\n    },\n    {\n      foreground: \"f92672\",\n      token: \"keyword\",\n    },\n    {\n      foreground: \"f92672\",\n      token: \"storage\",\n    },\n    {\n      foreground: \"66d9ef\",\n      fontStyle: \"italic\",\n      token: \"storage.type\",\n    },\n    {\n      foreground: \"a6e22e\",\n      fontStyle: \"underline\",\n      token: \"entity.name.class\",\n    },\n    {\n      foreground: \"a6e22e\",\n      fontStyle: \"italic underline\",\n      token: \"entity.other.inherited-class\",\n    },\n    {\n      foreground: \"a6e22e\",\n      token: \"entity.name.function\",\n    },\n    {\n      foreground: \"fd971f\",\n      fontStyle: \"italic\",\n      token: \"variable.parameter\",\n    },\n    {\n      foreground: \"f92672\",\n      token: \"entity.name.tag\",\n    },\n    {\n      foreground: \"a6e22e\",\n      token: \"entity.other.attribute-name\",\n    },\n    {\n      foreground: \"66d9ef\",\n      token: \"support.function\",\n    },\n    {\n      foreground: \"66d9ef\",\n      token: \"support.constant\",\n    },\n    {\n      foreground: \"66d9ef\",\n      fontStyle: \"italic\",\n      token: \"support.type\",\n    },\n    {\n      foreground: \"66d9ef\",\n      fontStyle: \"italic\",\n      token: \"support.class\",\n    },\n    {\n      foreground: \"f8f8f0\",\n      background: \"f92672\",\n      token: \"invalid\",\n    },\n    {\n      foreground: \"f8f8f0\",\n      background: \"ae81ff\",\n      token: \"invalid.deprecated\",\n    },\n    {\n      foreground: \"cfcfc2\",\n      token: \"meta.structure.dictionary.json string.quoted.double.json\",\n    },\n    {\n      foreground: \"75715e\",\n      token: \"meta.diff\",\n    },\n    {\n      foreground: \"75715e\",\n      token: \"meta.diff.header\",\n    },\n    {\n      foreground: \"f92672\",\n      token: \"markup.deleted\",\n    },\n    {\n      foreground: \"a6e22e\",\n      token: \"markup.inserted\",\n    },\n    {\n      foreground: \"e6db74\",\n      token: \"markup.changed\",\n    },\n    {\n      foreground: \"ae81ffa0\",\n      token: \"constant.numeric.line-number.find-in-files - match\",\n    },\n    {\n      foreground: \"e6db74\",\n      token: \"entity.name.filename.find-in-files\",\n    },\n  ],\n  colors: {\n    \"editor.foreground\": \"#F8F8F2\",\n    \"editor.background\": \"#272821\",\n    \"editor.selectionBackground\": \"#49483E\",\n    \"editor.lineHighlightBackground\": \"#3E3D32\",\n    \"editorCursor.foreground\": \"#F8F8F0\",\n    \"editorWhitespace.foreground\": \"#3B3A32\",\n    \"editorIndentGuide.activeBackground\": \"#9D550FB0\",\n    \"editor.selectionHighlightBorder\": \"#222218\",\n  },\n};\n","import { Layout, Row, Col, Typography } from \"antd\";\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\nimport React, { FC, useEffect } from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport { LeftPanelProps } from \"../../types\";\nimport { MONOKAI } from \"../../types/editor.types\";\n\nimport \"../../styles/monokai.scss\";\nimport \"./LeftPanel.scss\";\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport const LeftPannel: FC<LeftPanelProps> = (props: LeftPanelProps) => {\n  useEffect(() => {\n    monacoEditor.editor.defineTheme(\"monokai\", MONOKAI);\n  }, []);\n\n  const onInputChange = (newVal: string) => {\n    if (newVal !== undefined) {\n      props.onChange(newVal);\n    }\n  };\n\n  return (\n    <Content style={{ width: \"100%\", height: \"100%\" }}>\n      <Content className=\"mk mk--bg\">\n        <Row style={{ padding: \"10px 0\" }}>\n          <Col span={24}>\n            <Title className=\"info-title\" level={5}>\n              Paste unformatted JSON here:\n            </Title>\n          </Col>\n        </Row>\n      </Content>\n\n      <MonacoEditor\n        width=\"100%\"\n        height=\"100%\"\n        language=\"json\"\n        options={{\n          minimap: {\n            enabled: true,\n          },\n          language: \"json\",\n          wordWrap: \"on\",\n        }}\n        theme=\"monokai\"\n        onChange={(newValue) => onInputChange(newValue)}\n      ></MonacoEditor>\n    </Content>\n  );\n};\n\nexport default LeftPannel;\n","import { JsonFormatterOptions } from \"../types\";\n\nexport const DEFAULT_OPTIONS: JsonFormatterOptions = {\n  spaces: 2,\n};\n","import { notification } from \"antd\";\nimport { ArgsProps as NotificationOptions } from \"antd/lib/notification\";\n\nexport interface INotificationService {\n  open(options: NotificationOptions): void;\n  error(options: NotificationOptions): void;\n}\n\nexport class NotificationService implements INotificationService {\n  open(options: NotificationOptions): void {\n    notification.open({\n      placement: \"bottomRight\",\n      ...options,\n    });\n  }\n\n  error(options: NotificationOptions): void {\n    notification.error({\n      placement: \"bottomRight\",\n      ...options,\n    });\n  }\n}\n\nexport const notificationService: INotificationService = new NotificationService();\n","import { CopyOutlined } from \"@ant-design/icons\";\nimport {\n  Button,\n  Col,\n  InputNumber,\n  Layout,\n  Row,\n  Slider,\n  Typography,\n} from \"antd\";\nimport * as monacoEditor from \"monaco-editor/esm/vs/editor/editor.api\";\nimport React, { FC, useEffect, useState } from \"react\";\nimport MonacoEditor from \"react-monaco-editor\";\nimport { DEFAULT_OPTIONS } from \"../../constants\";\nimport { notificationService } from \"../../services\";\nimport { RightPanelProps } from \"../../types\";\nimport { MONOKAI } from \"../../types/editor.types\";\nimport \"../../styles/monokai.scss\";\nimport \"./RightPanel.scss\";\n\nconst { Content } = Layout;\nconst { Title } = Typography;\n\nexport const RightPanel: FC<RightPanelProps> = (props: RightPanelProps) => {\n  useEffect(() => {\n    monacoEditor.editor.defineTheme(\"monokai\", MONOKAI);\n  }, []);\n\n  const [\n    editor,\n    setEditor,\n  ] = useState<monacoEditor.editor.IStandaloneCodeEditor>();\n\n  const [spaceSize, setSpaceSize] = useState(DEFAULT_OPTIONS.spaces);\n\n  const openConfirmationNotification = () => {\n    notificationService.open({\n      message: \"Copy / paste completed.\",\n      description: \"Code pasted to clipboard succesfully\",\n      icon: <CopyOutlined />,\n    });\n  };\n\n  const copyOnClick = () => {\n    try {\n      if (editor) {\n        const range = editor.getModel()!.getFullModelRange();\n        editor.focus();\n        editor.setSelection(range);\n        document.execCommand(\"copy\");\n\n        openConfirmationNotification();\n      } else {\n        notificationService.error({\n          message: \"No editor found\",\n        });\n      }\n    } catch (err) {\n      notificationService.error({\n        message: err.message,\n      });\n    }\n  };\n\n  const onStepperChange = (value: any) => {\n    if (typeof value === \"number\") {\n      setSpaceSize(value);\n\n      if (props.onIndentSizeChange) {\n        props.onIndentSizeChange({ spaces: value });\n      }\n    }\n  };\n\n  const editorMount = (editor: monacoEditor.editor.IStandaloneCodeEditor) => {\n    try {\n      setEditor(editor);\n    } catch (err) {\n      notificationService.error(err.message);\n    }\n  };\n\n  return (\n    <Content\n      style={{\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"#272821\",\n      }}\n    >\n      <Content>\n        <Row style={{ padding: \"10px 0\" }}>\n          <Col span={17}>\n            <Row className=\"indent-options\">\n              <Col span={9}>\n                <Title level={5} className=\"mk indent-title\">\n                  Indent spaces:\n                </Title>\n              </Col>\n              <Col span={9} style={{ marginTop: \"-4px\" }}>\n                <Slider\n                  min={2}\n                  max={8}\n                  step={2}\n                  className=\"mk mk--blue\"\n                  onChange={(value: number) => {\n                    onStepperChange(value);\n                  }}\n                  value={\n                    typeof spaceSize === \"number\"\n                      ? spaceSize\n                      : DEFAULT_OPTIONS.spaces\n                  }\n                />\n              </Col>\n              <Col span={4} style={{ marginTop: \"-4px\" }}>\n                <InputNumber\n                  min={2}\n                  max={8}\n                  className=\"mk mk--blue mk--bg indent-border\"\n                  style={{ margin: \"0 15px\", width: \"55px\" }}\n                  value={spaceSize}\n                  step={2}\n                  onChange={(value) => {\n                    onStepperChange(value);\n                  }}\n                />\n              </Col>\n            </Row>\n          </Col>\n          <Col span={7}>\n            <Button\n              className=\"mk copy-btn\"\n              type=\"dashed\"\n              icon={<CopyOutlined />}\n              size={\"large\"}\n              onClick={copyOnClick}\n            >\n              copy_to_clipboard()\n            </Button>\n          </Col>\n        </Row>\n      </Content>\n\n      <MonacoEditor\n        width=\"100%\"\n        height=\"100%\"\n        theme=\"vs-dark\"\n        options={{\n          minimap: {\n            enabled: true,\n          },\n          language: \"json\",\n          readOnly: true,\n          renderFinalNewline: true,\n          renderWhitespace: \"all\",\n          wordWrap: \"on\",\n          theme: \"monokai\",\n        }}\n        value={props.inputText}\n        editorDidMount={(editor) => editorMount(editor)}\n      ></MonacoEditor>\n    </Content>\n  );\n};\n\nexport default RightPanel;\n","import { DEFAULT_OPTIONS } from \"../constants\";\nimport { JsonFormatterOptions } from \"../types/engine.types\";\n\nexport interface IJsonFormatterEngine {\n  format(value: string, options?: JsonFormatterOptions): string;\n}\n\nexport class JsonFormatterEngine implements IJsonFormatterEngine {\n  format(value: string, options?: JsonFormatterOptions): string {\n    try {\n      const jsonInput = JSON.parse(value);\n\n      const jsonOptions = options ?? DEFAULT_OPTIONS;\n\n      return JSON.stringify(jsonInput, null, jsonOptions.spaces);\n    } catch (err) {\n      throw err;\n    }\n  }\n}\n","import { Col, Row } from \"antd\";\nimport \"../../../node_modules/antd/dist/antd.css\";\nimport React, { FC, useState } from \"react\";\nimport { LeftPannel, RightPanel } from \"../../components\";\nimport { IJsonFormatterEngine, JsonFormatterEngine } from \"../../engine\";\nimport { notificationService } from \"../../services\";\nimport { JsonFormatterOptions } from \"../../types\";\nimport { DEFAULT_OPTIONS } from \"../../constants\";\n\nexport const EditorPage: FC = () => {\n  const engine: IJsonFormatterEngine = new JsonFormatterEngine();\n  const [inputText, setInputText] = useState(\"\");\n  const [indentSize, setIndentSize] = useState(DEFAULT_OPTIONS);\n\n  const onInputChange = (val: string, options?: JsonFormatterOptions) => {\n    let formatterValue = \"\";\n    try {\n      const formatOptions = options ?? indentSize;\n      formatterValue = engine.format(val, formatOptions);\n    } catch (err) {\n      formatterValue = err.message;\n    }\n\n    setInputText(formatterValue);\n  };\n\n  const onIndentSizeChange = (options: JsonFormatterOptions) => {\n    try {\n      setIndentSize(options);\n      onInputChange(inputText, options);\n    } catch (err) {\n      notificationService.error(err.message);\n    }\n  };\n\n  return (\n    <Row style={{ height: \"100%\" }}>\n      <Col span={12}>\n        <LeftPannel onChange={onInputChange}></LeftPannel>\n      </Col>\n      <Col span={12}>\n        <RightPanel\n          onIndentSizeChange={onIndentSizeChange}\n          inputText={inputText}\n        ></RightPanel>\n      </Col>\n    </Row>\n  );\n};\n\nexport default EditorPage;\n","import { Layout, Typography } from \"antd\";\nimport React, { FC } from \"react\";\nimport \"../../styles/monokai.scss\";\nimport \"./Footer.scss\";\n\nconst { Footer: FooterComponent } = Layout;\nconst { Text, Link } = Typography;\n\nexport const Footer: FC = () => {\n  return (\n    <FooterComponent className=\"footer\">\n      <Text\n        style={{\n          fontSize: \"10px\",\n          textAlign: \"center\",\n          fontFamily:\n            \"'SFMono-Regular', Consolas, 'Liberation Mono', Menlo, Courier, monospace\",\n        }}\n      >\n        <Text style={{ color: \"#eff2e2\" }}>{\"{ \"} </Text>\n        <Text style={{ color: \"#78dde8\" }}>Andrei Lucaci</Text>{\" \"}\n        <Text style={{ color: \"#ff6189\" }}>©2021</Text>{\" \"}\n        <Text style={{ color: \"#eff2e2\" }}>-</Text>{\" \"}\n        <Link\n          style={{ color: \"#a9dc76\" }}\n          title=\"github\"\n          href=\"https://github.com/AndreiLucaci/json-format\"\n        >\n          https://github.com/AndreiLucaci/json-format\n        </Link>{\" \"}\n        <Text style={{ color: \"#eff2e2\" }}>-</Text>{\" \"}\n        <Text style={{ color: \"#78dde8\" }}>JSON</Text>{\" \"}\n        <Text style={{ color: \"#eff2e2\" }}>Format</Text>{\" \"}\n        <Text style={{ color: \"#eff2e2\" }}>{\" }\"}</Text>\n      </Text>\n    </FooterComponent>\n  );\n};\n\nexport default Footer;\n","import { Layout, Typography } from \"antd\";\nimport \"../../../node_modules/antd/dist/antd.css\";\nimport React, { FC } from \"react\";\nimport \"../../styles/monokai.scss\";\nimport \"./Header.scss\";\n\nconst { Header: HeaderComponent } = Layout;\nconst { Text, Title } = Typography;\n\nexport const Header: FC = () => {\n  return (\n    <HeaderComponent className=\"header\">\n      <Title\n        style={{\n          marginTop: \"10px\",\n          textAlign: \"center\",\n        }}\n        className=\"mk\"\n      >\n        <Text className=\"mk mk--blue\">JSON </Text>\n        <Text className=\"mk mk--white\">formatter - </Text>\n        <Text className=\"mk mk--green\">simple prettifier </Text>\n        <Text className=\"mk mk--red\">for </Text>\n        <Text className=\"mk mk--blue\">JSON</Text>\n      </Title>\n    </HeaderComponent>\n  );\n};\n\nexport default Header;\n","import { Layout } from \"antd\";\nimport \"../node_modules/antd/dist/antd.css\";\nimport React, { FC, useState } from \"react\";\n\nimport \"./App.scss\";\nimport { EditorPage } from \"./pages\";\nimport { Footer, Header } from \"./sections\";\n\nconst { Content } = Layout;\n\nconst App: FC = () => {\n  const [activePage] = useState(<EditorPage />);\n\n  return (\n    <Layout>\n      <Header />\n      <Content className=\"page\">{activePage}</Content>\n      <Footer />\n    </Layout>\n  );\n};\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <div className=\"bg-color\">\n      <App />\n    </div>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}